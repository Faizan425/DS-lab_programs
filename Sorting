Write a C program to take n numbers and sort the numbers in ascending
order. Try to implement the same using following sorting techniques.
1. Quick Sort
2. Merge Sort
Algorithm:

CODE:
1. QUICK SORT:
#include &lt;stdio.h&gt;

void swap(int* a, int* b) {

CS23231 – Data Structures

int t = *a;
*a = *b;
*b = t;
}

int partition(int arr[], int low, int high) {
int pivot = arr[high];
int i = (low - 1);

for (int j = low; j &lt;= high - 1; j++) {
if (arr[j] &lt; pivot) {
i++;
swap(&amp;arr[i], &amp;arr[j]);
}
}
swap(&amp;arr[i + 1], &amp;arr[high]);
return (i + 1);
}

void quickSort(int arr[], int low, int high) {
if (low &lt; high) {
int pi = partition(arr, low, high);
quickSort(arr, low, pi - 1);
quickSort(arr, pi + 1, high);
}
}

void printArray(int arr[], int size) {
for (int i = 0; i &lt; size; i++)
printf(&quot;%d &quot;, arr[i]);
printf(&quot;\n&quot;);
}

CS23231 – Data Structures

int main() {
int n;
printf(&quot;Enter the number of elements: &quot;);
scanf(&quot;%d&quot;, &amp;n);
int arr[n];
printf(&quot;Enter %d numbers:\n&quot;, n);
for (int i = 0; i &lt; n; i++) {
scanf(&quot;%d&quot;, &amp;arr[i]);
}

quickSort(arr, 0, n - 1);
printf(&quot;Sorted array: \n&quot;);
printArray(arr, n);
return 0;
}
2. MERGE SORT

#include &lt;stdio.h&gt;

void merge(int arr[], int l, int m, int r) {
int i, j, k;
int n1 = m - l + 1;
int n2 = r - m;
int L[n1], R[n2];

for (i = 0; i &lt; n1; i++)
L[i] = arr[l + i];
for (j = 0; j &lt; n2; j++)
R[j] = arr[m + 1 + j];

i = 0;
j = 0;
k = l;

CS23231 – Data Structures

while (i &lt; n1 &amp;&amp; j &lt; n2) {
if (L[i] &lt;= R[j]) {
arr[k] = L[i];
i++;
} else {
arr[k] = R[j];
j++;
}
k++;
}

while (i &lt; n1) {
arr[k] = L[i];
i++;
k++;
}

while (j &lt; n2) {
arr[k] = R[j];
j++;
k++;
}
}

void mergeSort(int arr[], int l, int r) {
if (l &lt; r) {
int m = l + (r - l) / 2;
mergeSort(arr, l, m);
mergeSort(arr, m + 1, r);
merge(arr, l, m, r);
}
}

CS23231 – Data Structures

void printArray(int A[], int size) {
int i;
for (i = 0; i &lt; size; i++)
printf(&quot;%d &quot;, A[i]);
printf(&quot;\n&quot;);
}

int main() {
int n;
printf(&quot;Enter the number of elements: &quot;);
scanf(&quot;%d&quot;, &amp;n);
int arr[n];
printf(&quot;Enter %d numbers:\n&quot;, n);
for (int i = 0; i &lt; n; i++) {
scanf(&quot;%d&quot;, &amp;arr[i]);
}

mergeSort(arr, 0, n - 1);
printf(&quot;Sorted array: \n&quot;);
printArray(arr, n);
return 0;
}
